--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=18 LPM_WIDTH=5 data eq
--VERSION_BEGIN 21.1 cbx_cycloneii 2021:10:21:11:02:24:SJ cbx_lpm_add_sub 2021:10:21:11:02:24:SJ cbx_lpm_compare 2021:10:21:11:02:24:SJ cbx_lpm_decode 2021:10:21:11:02:24:SJ cbx_mgl 2021:10:21:11:11:47:SJ cbx_nadder 2021:10:21:11:02:24:SJ cbx_stratix 2021:10:21:11:02:24:SJ cbx_stratixii 2021:10:21:11:02:24:SJ  VERSION_END


-- Copyright (C) 2021  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_p2a
( 
	data[4..0]	:	input;
	eq[17..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[17..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode620w[2..0]	: WIRE;
	w_anode634w[3..0]	: WIRE;
	w_anode651w[3..0]	: WIRE;
	w_anode661w[3..0]	: WIRE;
	w_anode671w[3..0]	: WIRE;
	w_anode681w[3..0]	: WIRE;
	w_anode691w[3..0]	: WIRE;
	w_anode701w[3..0]	: WIRE;
	w_anode711w[3..0]	: WIRE;
	w_anode723w[2..0]	: WIRE;
	w_anode733w[3..0]	: WIRE;
	w_anode744w[3..0]	: WIRE;
	w_anode754w[3..0]	: WIRE;
	w_anode764w[3..0]	: WIRE;
	w_anode774w[3..0]	: WIRE;
	w_anode784w[3..0]	: WIRE;
	w_anode794w[3..0]	: WIRE;
	w_anode804w[3..0]	: WIRE;
	w_anode815w[2..0]	: WIRE;
	w_anode825w[3..0]	: WIRE;
	w_anode836w[3..0]	: WIRE;
	w_anode846w[3..0]	: WIRE;
	w_anode856w[3..0]	: WIRE;
	w_anode866w[3..0]	: WIRE;
	w_anode876w[3..0]	: WIRE;
	w_anode886w[3..0]	: WIRE;
	w_anode896w[3..0]	: WIRE;
	w_anode907w[2..0]	: WIRE;
	w_anode917w[3..0]	: WIRE;
	w_anode928w[3..0]	: WIRE;
	w_anode938w[3..0]	: WIRE;
	w_anode948w[3..0]	: WIRE;
	w_anode958w[3..0]	: WIRE;
	w_anode968w[3..0]	: WIRE;
	w_anode978w[3..0]	: WIRE;
	w_anode988w[3..0]	: WIRE;
	w_data618w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[17..0] = eq_wire[17..0];
	eq_wire[] = ( ( w_anode988w[3..3], w_anode978w[3..3], w_anode968w[3..3], w_anode958w[3..3], w_anode948w[3..3], w_anode938w[3..3], w_anode928w[3..3], w_anode917w[3..3]), ( w_anode896w[3..3], w_anode886w[3..3], w_anode876w[3..3], w_anode866w[3..3], w_anode856w[3..3], w_anode846w[3..3], w_anode836w[3..3], w_anode825w[3..3]), ( w_anode804w[3..3], w_anode794w[3..3], w_anode784w[3..3], w_anode774w[3..3], w_anode764w[3..3], w_anode754w[3..3], w_anode744w[3..3], w_anode733w[3..3]), ( w_anode711w[3..3], w_anode701w[3..3], w_anode691w[3..3], w_anode681w[3..3], w_anode671w[3..3], w_anode661w[3..3], w_anode651w[3..3], w_anode634w[3..3]));
	w_anode620w[] = ( (w_anode620w[1..1] & (! data_wire[4..4])), (w_anode620w[0..0] & (! data_wire[3..3])), B"1");
	w_anode634w[] = ( (w_anode634w[2..2] & (! w_data618w[2..2])), (w_anode634w[1..1] & (! w_data618w[1..1])), (w_anode634w[0..0] & (! w_data618w[0..0])), w_anode620w[2..2]);
	w_anode651w[] = ( (w_anode651w[2..2] & (! w_data618w[2..2])), (w_anode651w[1..1] & (! w_data618w[1..1])), (w_anode651w[0..0] & w_data618w[0..0]), w_anode620w[2..2]);
	w_anode661w[] = ( (w_anode661w[2..2] & (! w_data618w[2..2])), (w_anode661w[1..1] & w_data618w[1..1]), (w_anode661w[0..0] & (! w_data618w[0..0])), w_anode620w[2..2]);
	w_anode671w[] = ( (w_anode671w[2..2] & (! w_data618w[2..2])), (w_anode671w[1..1] & w_data618w[1..1]), (w_anode671w[0..0] & w_data618w[0..0]), w_anode620w[2..2]);
	w_anode681w[] = ( (w_anode681w[2..2] & w_data618w[2..2]), (w_anode681w[1..1] & (! w_data618w[1..1])), (w_anode681w[0..0] & (! w_data618w[0..0])), w_anode620w[2..2]);
	w_anode691w[] = ( (w_anode691w[2..2] & w_data618w[2..2]), (w_anode691w[1..1] & (! w_data618w[1..1])), (w_anode691w[0..0] & w_data618w[0..0]), w_anode620w[2..2]);
	w_anode701w[] = ( (w_anode701w[2..2] & w_data618w[2..2]), (w_anode701w[1..1] & w_data618w[1..1]), (w_anode701w[0..0] & (! w_data618w[0..0])), w_anode620w[2..2]);
	w_anode711w[] = ( (w_anode711w[2..2] & w_data618w[2..2]), (w_anode711w[1..1] & w_data618w[1..1]), (w_anode711w[0..0] & w_data618w[0..0]), w_anode620w[2..2]);
	w_anode723w[] = ( (w_anode723w[1..1] & (! data_wire[4..4])), (w_anode723w[0..0] & data_wire[3..3]), B"1");
	w_anode733w[] = ( (w_anode733w[2..2] & (! w_data618w[2..2])), (w_anode733w[1..1] & (! w_data618w[1..1])), (w_anode733w[0..0] & (! w_data618w[0..0])), w_anode723w[2..2]);
	w_anode744w[] = ( (w_anode744w[2..2] & (! w_data618w[2..2])), (w_anode744w[1..1] & (! w_data618w[1..1])), (w_anode744w[0..0] & w_data618w[0..0]), w_anode723w[2..2]);
	w_anode754w[] = ( (w_anode754w[2..2] & (! w_data618w[2..2])), (w_anode754w[1..1] & w_data618w[1..1]), (w_anode754w[0..0] & (! w_data618w[0..0])), w_anode723w[2..2]);
	w_anode764w[] = ( (w_anode764w[2..2] & (! w_data618w[2..2])), (w_anode764w[1..1] & w_data618w[1..1]), (w_anode764w[0..0] & w_data618w[0..0]), w_anode723w[2..2]);
	w_anode774w[] = ( (w_anode774w[2..2] & w_data618w[2..2]), (w_anode774w[1..1] & (! w_data618w[1..1])), (w_anode774w[0..0] & (! w_data618w[0..0])), w_anode723w[2..2]);
	w_anode784w[] = ( (w_anode784w[2..2] & w_data618w[2..2]), (w_anode784w[1..1] & (! w_data618w[1..1])), (w_anode784w[0..0] & w_data618w[0..0]), w_anode723w[2..2]);
	w_anode794w[] = ( (w_anode794w[2..2] & w_data618w[2..2]), (w_anode794w[1..1] & w_data618w[1..1]), (w_anode794w[0..0] & (! w_data618w[0..0])), w_anode723w[2..2]);
	w_anode804w[] = ( (w_anode804w[2..2] & w_data618w[2..2]), (w_anode804w[1..1] & w_data618w[1..1]), (w_anode804w[0..0] & w_data618w[0..0]), w_anode723w[2..2]);
	w_anode815w[] = ( (w_anode815w[1..1] & data_wire[4..4]), (w_anode815w[0..0] & (! data_wire[3..3])), B"1");
	w_anode825w[] = ( (w_anode825w[2..2] & (! w_data618w[2..2])), (w_anode825w[1..1] & (! w_data618w[1..1])), (w_anode825w[0..0] & (! w_data618w[0..0])), w_anode815w[2..2]);
	w_anode836w[] = ( (w_anode836w[2..2] & (! w_data618w[2..2])), (w_anode836w[1..1] & (! w_data618w[1..1])), (w_anode836w[0..0] & w_data618w[0..0]), w_anode815w[2..2]);
	w_anode846w[] = ( (w_anode846w[2..2] & (! w_data618w[2..2])), (w_anode846w[1..1] & w_data618w[1..1]), (w_anode846w[0..0] & (! w_data618w[0..0])), w_anode815w[2..2]);
	w_anode856w[] = ( (w_anode856w[2..2] & (! w_data618w[2..2])), (w_anode856w[1..1] & w_data618w[1..1]), (w_anode856w[0..0] & w_data618w[0..0]), w_anode815w[2..2]);
	w_anode866w[] = ( (w_anode866w[2..2] & w_data618w[2..2]), (w_anode866w[1..1] & (! w_data618w[1..1])), (w_anode866w[0..0] & (! w_data618w[0..0])), w_anode815w[2..2]);
	w_anode876w[] = ( (w_anode876w[2..2] & w_data618w[2..2]), (w_anode876w[1..1] & (! w_data618w[1..1])), (w_anode876w[0..0] & w_data618w[0..0]), w_anode815w[2..2]);
	w_anode886w[] = ( (w_anode886w[2..2] & w_data618w[2..2]), (w_anode886w[1..1] & w_data618w[1..1]), (w_anode886w[0..0] & (! w_data618w[0..0])), w_anode815w[2..2]);
	w_anode896w[] = ( (w_anode896w[2..2] & w_data618w[2..2]), (w_anode896w[1..1] & w_data618w[1..1]), (w_anode896w[0..0] & w_data618w[0..0]), w_anode815w[2..2]);
	w_anode907w[] = ( (w_anode907w[1..1] & data_wire[4..4]), (w_anode907w[0..0] & data_wire[3..3]), B"1");
	w_anode917w[] = ( (w_anode917w[2..2] & (! w_data618w[2..2])), (w_anode917w[1..1] & (! w_data618w[1..1])), (w_anode917w[0..0] & (! w_data618w[0..0])), w_anode907w[2..2]);
	w_anode928w[] = ( (w_anode928w[2..2] & (! w_data618w[2..2])), (w_anode928w[1..1] & (! w_data618w[1..1])), (w_anode928w[0..0] & w_data618w[0..0]), w_anode907w[2..2]);
	w_anode938w[] = ( (w_anode938w[2..2] & (! w_data618w[2..2])), (w_anode938w[1..1] & w_data618w[1..1]), (w_anode938w[0..0] & (! w_data618w[0..0])), w_anode907w[2..2]);
	w_anode948w[] = ( (w_anode948w[2..2] & (! w_data618w[2..2])), (w_anode948w[1..1] & w_data618w[1..1]), (w_anode948w[0..0] & w_data618w[0..0]), w_anode907w[2..2]);
	w_anode958w[] = ( (w_anode958w[2..2] & w_data618w[2..2]), (w_anode958w[1..1] & (! w_data618w[1..1])), (w_anode958w[0..0] & (! w_data618w[0..0])), w_anode907w[2..2]);
	w_anode968w[] = ( (w_anode968w[2..2] & w_data618w[2..2]), (w_anode968w[1..1] & (! w_data618w[1..1])), (w_anode968w[0..0] & w_data618w[0..0]), w_anode907w[2..2]);
	w_anode978w[] = ( (w_anode978w[2..2] & w_data618w[2..2]), (w_anode978w[1..1] & w_data618w[1..1]), (w_anode978w[0..0] & (! w_data618w[0..0])), w_anode907w[2..2]);
	w_anode988w[] = ( (w_anode988w[2..2] & w_data618w[2..2]), (w_anode988w[1..1] & w_data618w[1..1]), (w_anode988w[0..0] & w_data618w[0..0]), w_anode907w[2..2]);
	w_data618w[2..0] = data_wire[2..0];
END;
--VALID FILE
